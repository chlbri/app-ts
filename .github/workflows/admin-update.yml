name: Admin Update

on:
  # Déclenchement manuel
  workflow_dispatch:
  # Cron chaque premier du mois à 9h UTC
  schedule:
    - cron: '0 9 1 * *'

# Ajouter les permissions au niveau du workflow
permissions:
  contents: write
  actions: read
  pull-requests: write
  issues: write

jobs:
  admin-update:
    name: Execute CI Admin Scripts
    runs-on: ubuntu-latest
    # Exécuter seulement sur main/master pour les scheduled runs
    if:
      github.event_name != 'schedule' || github.ref == 'refs/heads/main' ||
      github.ref == 'refs/heads/master'
    outputs:
      changes-detected: ${{ steps.check-changes.outputs.changes }}

    steps:
      - name: Checkout pnpm repo
        uses: 'chlbri/pnpmi-action@main'

      - name: Execute CI Admin
        run: pnpm run ci:admin

      - name: Check for changes
        id: check-changes
        run: |
          if git diff --quiet && git diff --cached --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Upload workspace
        if: steps.check-changes.outputs.changes == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: updated-workspace
          path: |
            .
            !node_modules
            !.git
          retention-days: 1

  commit-changes:
    name: Commit Changes
    runs-on: ubuntu-latest
    needs: admin-update
    if: needs.admin-update.outputs.changes-detected == 'true'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Download workspace
        uses: actions/download-artifact@v4
        with:
          name: updated-workspace
          path: .

      - name: Commit and push changes
        uses: EndBug/add-and-commit@v9
        with:
          message:
            'chore(admin): Execute monthly admin maintenance scripts'
          author_name: '@chlbri'
          author_email: 'bri_lvi@icloud.com'
          add: '.'
          github_token: ${{ secrets.GITHUB_TOKEN }}

  cleanup:
    name: Cleanup Artifacts
    runs-on: ubuntu-latest
    needs: [admin-update, commit-changes]
    if: always() && needs.admin-update.outputs.changes-detected == 'true'

    steps:
      - name: Delete artifacts
        uses: actions/github-script@v7
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId,
            });

            for (const artifact of artifacts.data.artifacts) {
              if (artifact.name === 'updated-workspace') {
                await github.rest.actions.deleteArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id,
                });
              }
            }
