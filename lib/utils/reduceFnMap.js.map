{"version":3,"file":"reduceFnMap.js","sources":["../../src/utils/reduceFnMap.ts"],"sourcesContent":["import type { EventsMap, PromiseeMap, ToEventsR } from '#events';\nimport {\n  isFunction,\n  type FnMap,\n  type FnMapR,\n  type FnR,\n  type FnReduced,\n} from '#types';\nimport type { types } from '@bemedev/types';\nimport { castings } from '@bemedev/types';\nimport { nothing } from './nothing';\n\ntype ToEventMap_F = <\n  E extends EventsMap,\n  P extends PromiseeMap = PromiseeMap,\n>(\n  events: E,\n  promisees: P,\n) => ToEventsR<E, P>;\n\nexport const toEventsMap: ToEventMap_F = (events, _promisees) => {\n  const promisees = Object.entries(_promisees).reduce(\n    (acc, [key, value]) => {\n      acc[`${key}::then`] = value.then;\n      acc[`${key}::catch`] = value.catch;\n      return acc;\n    },\n    {} as any,\n  );\n\n  return { ...events, ...promisees };\n};\n\nexport type ReduceFnMap_F = <\n  E extends EventsMap,\n  P extends PromiseeMap = PromiseeMap,\n  Pc = any,\n  Tc extends types.PrimitiveObject = types.PrimitiveObject,\n  R = any,\n>(\n  events: E,\n  promisees: P,\n  fn: FnMap<E, P, Pc, Tc, R>,\n) => FnR<E, P, Pc, Tc, R>;\n\n/**\n * Reduces a function map to a single function that processes events.\n * @param events the events map.\n * @param promisees the promisees map.\n * @param fn the function map to reduce.\n * @returns a function that takes a context and an event, returning the result of the function map.\n *\n * @see {@linkcode ReduceFnMap_F} for the type definition.\n * @see {@linkcode toEventsMap} for converting events and promisees to a map.\n * @see {@linkcode isFunction} for checking if a value is a function.\n * @see {@linkcode nothing} for the default else function.\n */\nexport const reduceFnMap: ReduceFnMap_F = (events, promisees, fn) => {\n  const check1 = isFunction(fn);\n  if (check1) return fn;\n\n  const map = toEventsMap(events, promisees);\n  const keys = Object.keys(map);\n\n  return ({ event, context, pContext, status, value, tags }) => {\n    const check5 = typeof event === 'string';\n    const _else = fn.else ?? nothing;\n    if (check5)\n      return castings.commons.any(\n        _else({ event, context, pContext, status, value, tags }),\n      );\n\n    const { payload, type } = event;\n\n    for (const key of keys) {\n      const check2 = type === key;\n      const func = castings.commons.any(fn)[key];\n      const check3 = !!func;\n\n      const check4 = check2 && check3;\n      if (check4)\n        return func({ payload, context, pContext, status, value, tags });\n    }\n\n    return castings.commons.any(\n      _else({ event, context, pContext, status, value, tags }),\n    );\n  };\n};\n\nexport type ReduceFnMap2_F = <\n  E extends EventsMap,\n  P extends PromiseeMap = PromiseeMap,\n  Tc extends types.PrimitiveObject = types.PrimitiveObject,\n  R = any,\n>(\n  events: E,\n  promisees: P,\n  fn: FnMapR<E, P, Tc, R>,\n) => FnReduced<E, P, Tc, R>;\n\n/**\n * Reduces a function map to a single function that processes events with a context.\n * @param events the events map.\n * @param promisees the promisees map.\n * @param fn the function map to reduce.\n * @returns a function that takes a context and an event, returning the result of the function map.\n *\n * @see {@linkcode ReduceFnMap2_F} for the type definition.\n * @see {@linkcode toEventsMap} for converting events and promisees to a map.\n * @see {@linkcode isFunction} for checking if a value is a function.\n * @see {@linkcode nothing} for the default else function.\n *\n * @remarks\n * This version is specifically designed to work with a context and an events map,\n *\n * Similar to {@linkcode reduceFnMap}, but it does not take a private context.\n */\nexport const reduceFnMapReduced: ReduceFnMap2_F = (\n  events,\n  promisees,\n  fn,\n) => {\n  const check1 = isFunction(fn);\n  if (check1) return castings.commons.any(fn);\n\n  const map = toEventsMap(events, promisees);\n  const keys = Object.keys(map);\n\n  return ({ context, event, status, value, tags }) => {\n    const check5 = typeof event === 'string';\n    const _else = fn.else ?? nothing;\n    if (check5)\n      return castings.commons.any(\n        _else({ context, event, status, value, tags }),\n      );\n\n    const { payload, type } = event;\n\n    for (const key of keys) {\n      const check2 = type === key;\n      const func = castings.commons.any(fn)[key];\n      const check3 = !!func;\n\n      const check4 = check2 && check3;\n      if (check4) return func({ context, payload, status, value, tags });\n    }\n\n    return castings.commons.any(\n      _else({ context, event, status, value, tags }),\n    );\n  };\n};\n"],"names":[],"mappings":"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"}