{"version":3,"file":"contexts.js","sources":["../../../../src/machine/functions/subcriber/contexts.ts"],"sourcesContent":["import {\n  decompose,\n  type Decompose,\n  type Recompose,\n} from '@bemedev/decompose';\nimport { type types } from '@bemedev/types';\n\n// #region type AssignByBey_F\nexport type AssignByBey_F = <\n  T extends types.Ru,\n  D extends Decompose<T>,\n  K extends Extract<keyof D, string>,\n  R extends D[K],\n>(\n  obj: T,\n  key: K,\n  value: R,\n) => T;\n// #endregion\nexport interface AssignByKey {\n  (obj: any, key: string, value: any): any;\n  low: (obj: any, key: string, value: any) => any;\n  typed: AssignByBey_F;\n}\n\nconst _assignByKey: AssignByKey['low'] = (obj, key, value) => {\n  const out: any = obj;\n  const keys = (key as string).split('.');\n\n  const check1 = keys.length === 1;\n  if (check1) {\n    out[key] = value;\n    return out;\n  }\n  out[keys[0]] = _assignByKey(\n    out[keys[0]],\n    keys.slice(1).join('.'),\n    value,\n  );\n\n  return out;\n};\n\n/**\n * Assigns a value to a path in an object.\n * @param obj The object to assign the value to\n * @param path The key to assign the value to, can be a nested key (e.g. 'a.b.c')\n * @param value The value to assign to the key\n * @returns The modified object with the value assigned to the specified key\n *\n * @see {@linkcode Decompose} for more details on object decomposition.\n */\nexport const assignByKey: AssignByKey = (obj, path, value) => {\n  return _assignByKey(obj, path, value);\n};\n\nassignByKey.low = _assignByKey;\nassignByKey.typed = _assignByKey;\n\n// #region type GetByKey_F\nexport type GetByKey_F = <\n  T extends types.Ru,\n  K extends keyof Decompose<T>,\n>(\n  obj: T,\n  key: Extract<K, string>,\n) => Decompose<T>[K];\n// #endregion\nexport interface GetByKey {\n  (obj: any, key: string): any;\n  low: (obj: any, key: string) => any;\n  typed: GetByKey_F;\n}\n\nconst _getByKey: GetByKey['low'] = (obj, key) => {\n  const decomposed = decompose.low(obj, { start: false });\n  return (decomposed as any)[key];\n};\n\n/**\n * Retrieves a value from an object by a specified key.\n * @param obj The object to retrieve the value from\n * @param key The key to retrieve the value for, can be a nested key (e.g. 'a.b.c')\n * @returns The value associated with the specified key in the object\n *\n * @see {@linkcode Decompose} for more details on object decomposition.\n */\nexport const getByKey: GetByKey = (obj, key) => _getByKey(obj, key);\n\ngetByKey.low = _getByKey;\ngetByKey.typed = _getByKey;\n\n// #region type MergeByKey_F\nexport type MergeByKey_F = (\n  obj: types.Ru,\n) => <D extends Decompose<typeof obj>, K extends keyof D>(\n  key: Extract<K, string>,\n  value: D[K],\n) => Recompose<Pick<D, K>>;\n// #endregion\nexport interface MergeByKey {\n  (obj: any): (key: string, value: any) => any;\n  low: (obj: any) => (key: string, value: any) => any;\n  typed: MergeByKey_F;\n}\n\nconst _mergeByKey: MergeByKey['low'] = () => {\n  return (key, value) => {\n    const out: any = {};\n    const keys = key.toLocaleString().split('.');\n\n    const check1 = keys.length === 1;\n    if (check1) {\n      out[key] = value;\n    } else {\n      out[keys[0]] = _mergeByKey(out[keys[0]])(\n        keys.slice(1).join('.'),\n        value,\n      );\n    }\n\n    return out;\n  };\n};\n\n/**\n * Creates a function that merges a value into an object at a specified key path.\n * @param obj The object to merge the value into\n * @returns A function that takes a key and a value, and merges the value into the object at the specified key path\n *\n * @see {@linkcode Decompose} for more details on object decomposition.\n */\nexport const mergeByKey: MergeByKey = obj => _mergeByKey(obj);\n\nmergeByKey.low = _mergeByKey;\nmergeByKey.typed = _mergeByKey;\n"],"names":[],"mappings":";;AAyBA,MAAM,YAAY,GAAuB,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,KAAI;IAC3D,MAAM,GAAG,GAAQ,GAAG;IACpB,MAAM,IAAI,GAAI,GAAc,CAAC,KAAK,CAAC,GAAG,CAAC;AAEvC,IAAA,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,KAAK,CAAC;IAChC,IAAI,MAAM,EAAE;AACV,QAAA,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;AAChB,QAAA,OAAO,GAAG;IACZ;AACA,IAAA,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,YAAY,CACzB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EACZ,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EACvB,KAAK,CACN;AAED,IAAA,OAAO,GAAG;AACZ,CAAC;AAED;;;;;;;;AAQG;AACI,MAAM,WAAW,GAAgB,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,KAAI;IAC3D,OAAO,YAAY,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC;AACvC;AAEA,WAAW,CAAC,GAAG,GAAG,YAAY;AAC9B,WAAW,CAAC,KAAK,GAAG,YAAY;AAiBhC,MAAM,SAAS,GAAoB,CAAC,GAAG,EAAE,GAAG,KAAI;AAC9C,IAAA,MAAM,UAAU,GAAG,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;AACvD,IAAA,OAAQ,UAAkB,CAAC,GAAG,CAAC;AACjC,CAAC;AAED;;;;;;;AAOG;AACI,MAAM,QAAQ,GAAa,CAAC,GAAG,EAAE,GAAG,KAAK,SAAS,CAAC,GAAG,EAAE,GAAG;AAElE,QAAQ,CAAC,GAAG,GAAG,SAAS;AACxB,QAAQ,CAAC,KAAK,GAAG,SAAS;AAgB1B,MAAM,WAAW,GAAsB,MAAK;AAC1C,IAAA,OAAO,CAAC,GAAG,EAAE,KAAK,KAAI;QACpB,MAAM,GAAG,GAAQ,EAAE;QACnB,MAAM,IAAI,GAAG,GAAG,CAAC,cAAc,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC;AAE5C,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,KAAK,CAAC;QAChC,IAAI,MAAM,EAAE;AACV,YAAA,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;QAClB;aAAO;AACL,YAAA,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CACtC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EACvB,KAAK,CACN;QACH;AAEA,QAAA,OAAO,GAAG;AACZ,IAAA,CAAC;AACH,CAAC;AAED;;;;;;AAMG;AACI,MAAM,UAAU,GAAe,GAAG,IAAI,WAAW,CAAI;AAE5D,UAAU,CAAC,GAAG,GAAG,WAAW;AAC5B,UAAU,CAAC,KAAK,GAAG,WAAW;;;;"}