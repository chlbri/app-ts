{"version":3,"file":"events.cjs","sources":["../../../../src/machine/functions/subcriber/events.ts"],"sourcesContent":["import type { RecordS } from '#types';\nimport { toArray } from '@bemedev/basifun';\nimport { EVENTS_FULL } from '../../constants';\n\nexport type ReduceEvents_F = (\n  events: (RecordS<string | string[]> | string)[] | typeof EVENTS_FULL,\n\n  firstEvent: string,\n  ...toChecks: string[]\n) => boolean;\n\n/**\n * Reduces the events to check if any of the specified events are present.\n * @param _events - The events to check, can be an array of strings or objects.\n * @param firstEvent - The first event to check against.\n * @param toChecks - The events to check for presence.\n * @returns true if any of the specified events are found, false otherwise.\n *\n * @see {@linkcode EVENTS_FULL} for the full events constant.\n * @see {@linkcode toArray} for converting values to an array.\n * @see {@linkcode RecordS} for the record type used in events.\n */\nexport const reduceEvents: ReduceEvents_F = (\n  _events,\n  firstEvent,\n  ...toChecks\n) => {\n  const check1 = _events === EVENTS_FULL;\n  if (check1) return true;\n\n  const check2 = toChecks.every(check => {\n    const check3 = _events.includes(check);\n    if (check3) return true;\n\n    for (const _event of _events) {\n      const check4 = typeof _event === 'string';\n      if (check4) continue;\n\n      const entries = Object.entries(_event);\n      for (const [key, value] of entries) {\n        const values = toArray.typed(value);\n\n        if (key === firstEvent) {\n          const check5 = values.includes(check);\n          if (check5) return true;\n        }\n      }\n    }\n    return false;\n  });\n\n  return check2;\n};\n"],"names":["EVENTS_FULL","toArray"],"mappings":";;;;;AAWA;;;;;;;;;;AAUG;AACI,MAAM,YAAY,GAAmB,CAC1C,OAAO,EACP,UAAU,EACV,GAAG,QAAQ,KACT;AACF,IAAA,MAAM,MAAM,GAAG,OAAO,KAAKA,6BAAW;AACtC,IAAA,IAAI,MAAM;AAAE,QAAA,OAAO,IAAI;IAEvB,MAAM,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,IAAG;QACpC,MAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC;AACtC,QAAA,IAAI,MAAM;AAAE,YAAA,OAAO,IAAI;AAEvB,QAAA,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;AAC5B,YAAA,MAAM,MAAM,GAAG,OAAO,MAAM,KAAK,QAAQ;AACzC,YAAA,IAAI,MAAM;gBAAE;YAEZ,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC;YACtC,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,OAAO,EAAE;gBAClC,MAAM,MAAM,GAAGC,eAAO,CAAC,KAAK,CAAC,KAAK,CAAC;AAEnC,gBAAA,IAAI,GAAG,KAAK,UAAU,EAAE;oBACtB,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;AACrC,oBAAA,IAAI,MAAM;AAAE,wBAAA,OAAO,IAAI;gBACzB;YACF;QACF;AACA,QAAA,OAAO,KAAK;AACd,IAAA,CAAC,CAAC;AAEF,IAAA,OAAO,MAAM;AACf;;;;"}