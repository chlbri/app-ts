{"version":3,"file":"toMachine.js","sources":["../../../src/machine/functions/toMachine.ts"],"sourcesContent":["import type { ActionConfig } from '#actions';\nimport type { EventsMap, PromiseeMap } from '#events';\nimport type { types } from '@bemedev/types';\nimport { isDescriber } from '~types';\nimport type { ChildS, MachineMap } from '../types';\n\nexport type ToMachine_F = <\n  E extends EventsMap,\n  P extends PromiseeMap = PromiseeMap,\n  Tc extends types.PrimitiveObject = types.PrimitiveObject,\n>(\n  machine: ActionConfig,\n  machines?: MachineMap<E, P, Tc>,\n) => (ChildS<E, P, Tc> & { id: string }) | undefined;\n\n/**\n * Converts a machine configuration to a machine object with an id.\n * * If the machine is a describer, it looks up the machine configuration by name.\n * * If the machine is a string, it looks up the machine configuration by that string.\n * * If the machine is not found in the provided machines map, it returns undefined.\n * @param machine of type {@linkcode ActionConfig}, the machine configuration to convert.\n * @param machines of type {@linkcode MachineMap}, the map of machines to look up the machine configuration.\n * @returns a machine object with an id, or undefined if the machine is not found.\n *\n * @see {@linkcode ChildS} for the structure of the machine object.\n * @see {@linkcode isDescriber} to check if the machine is a describer\n * @see {@linkcode types.PrimitiveObject} for the type of the context\n * @see {@linkcode EventsMap} for the events map\n * @see {@linkcode PromiseeMap} for the promisees map\n */\nexport const toMachine: ToMachine_F = (machine, machines) => {\n  if (isDescriber(machine)) {\n    const out = machines?.[machine.name];\n    if (!out) return undefined;\n    return { ...out, id: machine.name };\n  }\n\n  const out = machines?.[machine];\n  if (!out) return undefined;\n  return { ...out, id: machine };\n};\n"],"names":[],"mappings":";;AAeA;;;;;;;;;;;;;;AAcG;MACU,SAAS,GAAgB,CAAC,OAAO,EAAE,QAAQ,KAAI;AAC1D,IAAA,IAAI,WAAW,CAAC,OAAO,CAAC,EAAE;QACxB,MAAM,GAAG,GAAG,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC;AACpC,QAAA,IAAI,CAAC,GAAG;AAAE,YAAA,OAAO,SAAS;QAC1B,OAAO,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,OAAO,CAAC,IAAI,EAAE;IACrC;AAEA,IAAA,MAAM,GAAG,GAAG,QAAQ,GAAG,OAAO,CAAC;AAC/B,IAAA,IAAI,CAAC,GAAG;AAAE,QAAA,OAAO,SAAS;IAC1B,OAAO,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE;AAChC;;;;"}