{"version":3,"file":"isDefined.cjs","sources":["../../../../src/guards/functions/helpers/isDefined.ts"],"sourcesContent":["import type { EventsMap, PromiseeMap } from '#events';\nimport type { DefinedValue } from '#guards';\nimport type { FnR } from '#types';\nimport type { types } from '@bemedev/types';\nimport { isNotValue, isValue } from './value';\n\nexport type IsDefinedS_F = <\n  E extends EventsMap,\n  P extends PromiseeMap = PromiseeMap,\n  Pc = any,\n  Tc extends types.PrimitiveObject = types.PrimitiveObject,\n>(\n  path: DefinedValue<Pc, Tc>,\n) => FnR<E, P, Pc, Tc, boolean>;\n\n/**\n * Checks if the given path is defined (not undefined or null).\n * @param path : A {@linkcode DefinedValue}, the path to retrieve.\n * @returns A {@linkcode FnR} function that returns true if the path is defined, false otherwise.\n *\n * @see {@linkcode isNotValue} for more details.\n * @see {@linkcode EventsMap}\n * @see {@linkcode PromiseeMap}\n * @see {@linkcode types.PrimitiveObject}\n *\n */\nexport const isDefinedS: IsDefinedS_F = path => {\n  return isNotValue(path, undefined, null);\n};\n\n/**\n * Checks if the given path is undefined or null.\n * @param path : A {@linkcode DefinedValue} , the path to retrieve.\n * @returns A {@linkcode FnR} function that returns true if the path is undefined or null, false otherwise.\n *\n * @see {@linkcode isValue} for more details.\n * @see {@linkcode EventsMap}\n * @see {@linkcode PromiseeMap}\n * @see {@linkcode types.PrimitiveObject}\n */\nexport const isNotDefinedS: IsDefinedS_F = path => {\n  return isValue(path, undefined, null);\n};\n"],"names":["isNotValue","isValue"],"mappings":";;;;AAeA;;;;;;;;;;AAUG;AACI,MAAM,UAAU,GAAiB,IAAI,IAAG;IAC7C,OAAOA,yCAAU,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC;AAC1C;AAEA;;;;;;;;;AASG;AACI,MAAM,aAAa,GAAiB,IAAI,IAAG;IAChD,OAAOC,sCAAO,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC;AACvC;;;;;"}