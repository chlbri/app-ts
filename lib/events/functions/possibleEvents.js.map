{"version":3,"file":"possibleEvents.js","sources":["../../../src/events/functions/possibleEvents.ts"],"sourcesContent":["import type { NodeConfig } from '#states';\nimport type { RecordS } from '#types';\nimport { castings } from '@bemedev/types';\n\n/**\n * Returns a list of all possible events from a flat record of NodeConfig.\n * @param flat of type {@linkcode RecordS}<{@linkcode NodeConfig}>, a flat record of NodeConfig.\n * @returns An array of event names.\n *\n * @see {@linkcode castings} for the utility function to check if a value is defined.\n */\nexport const possibleEvents = (flat: RecordS<NodeConfig>) => {\n  const events: string[] = [];\n\n  const values = Object.values(flat);\n  values.forEach(value => {\n    const on = value.on;\n    const check = castings.commons.isDefined(on);\n\n    if (check) {\n      events.push(...Object.keys(on));\n    }\n  });\n\n  return events;\n};\n"],"names":[],"mappings":";;AAIA;;;;;;AAMG;AACI,MAAM,cAAc,GAAG,CAAC,IAAyB,KAAI;IAC1D,MAAM,MAAM,GAAa,EAAE;IAE3B,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AAClC,IAAA,MAAM,CAAC,OAAO,CAAC,KAAK,IAAG;AACrB,QAAA,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE;QACnB,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC;QAE5C,IAAI,KAAK,EAAE;YACT,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACjC;AACF,IAAA,CAAC,CAAC;AAEF,IAAA,OAAO,MAAM;AACf;;;;"}